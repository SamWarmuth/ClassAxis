!!!
%html{:xmlns => "http://www.w3.org/1999/xhtml"}
  %head
    %meta{:content => "text/html; charset=utf-8", "http-equiv" => "content-type"}/
    %link{:href => "/css/style.css", :media => "all", :rel => "stylesheet", :type => "text/css"}/
    %link{:href => "/css/jqui.css", :media => "all", :rel => "stylesheet", :type => "text/css"}/
    %link{:href => "/css/autoSuggest.css", :media => "all", :rel => "stylesheet", :type => "text/css"}/
    
    
    %title Class Axis
    %script{:src => "/js/jquery-1.4.2.min.js", :type => "text/javascript"}
    %script{:src => "/js/jquery-ui-1.8.4.custom.min.js", :type => "text/javascript"}
    %script{:src => "/js/excanvas.js", :type => "text/javascript"}
    %script{:src => "/js/visualize.jQuery.js", :type => "text/javascript"}
    %script{:src => "/js/functions.js", :type => "text/javascript"}
    %script{:src => "/js/fileuploader.js", :type => "text/javascript"}
    %script{:src => "/js/views/layout.js", :type => "text/javascript"}
    -users = User.all.delete_if{|u| u.id == @user.id}.map{|user| "{label:'#{user.name}', id:'#{user.id}'}"}.join(",")
    
    :javascript
      $(document).ready(function(){
        var storedUsers = [#{users}];
        var users = storedUsers; //never modify storedUsers
        
        $(".auto-users").autocomplete({
          source: users,
          highlightItem: true,
          select: function( event, ui ) {
            $(".auto-users").val("Hello!");
            var userList = $(".added-users");
            var idList = $(".added-ids");
            idList.val(idList.val() + " " + ui.item.id);
            
            if (userList.text() != "") userList.append(", ")
            userList.append(ui.item.label);
            return true;
          },
          change: function(event, ui) { return true; }
        });
      });
    
    %script{:src => "http://js.pusherapp.com/1.8/pusher.min.js", :type => "text/javascript"}
  %body
    #user-id{:style => "display: none"}= @user.id
    .shroud
    #page-wrapper
      .page
        -@user.broadcast_ids.map{|b_id| Broadcast.get(b_id)}.each do |broadcast|
          .notification{:class => broadcast.type}
            = broadcast.content.gsub("^^name^^", @user.name)
            .close{:id => broadcast.id}
        .page-content
          .modal-border
            .modal
              .modal-pane.modal-new-room.hide= haml :new_room, :layout => false
              .modal-pane.modal-browse-rooms.hide= haml :browse_rooms, :layout => false
              .modal-pane.modal-files.hide
                %h1.center Files from this room
                .files-content.modal-content
              .modal-pane.modal-settings.hide
                %h1.center Settings for this room
                .settings-content.modal-content
              .modal-pane.modal-users.hide
                %h1.center Users in this room
                .users-content.modal-content
          .spinner
          .header-box
            .titlebar= @selected
            .room-controls
              .hud-button.downloads.no-select
              .hud-button.settings.no-select
              .hud-button.users.no-select
          .secondary-container
            .secondary-navigation
              #smessages
                = haml :message_sidebar, :layout => false
            .selected-content
              = yield
          %br.cl
          .footer
            Â©2011 Class Axis